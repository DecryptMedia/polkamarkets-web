.pm-c-button {
  cursor: pointer;
  user-select: none;

  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: fit-content;

  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;

  border-width: $button-border-width;
  border-radius: $button-border-radius;
  border-style: solid;

  transition: $button-transitions;

  svg {
    transition: $button-transitions;
  }

  &:disabled {
    cursor: unset;
    touch-action: unset;
    pointer-events: none;
  }

  &--normal {
    @extend .pm-c-button;
    @include button-size('normal');
  }

  &--sm {
    @extend .pm-c-button;
    @include button-size('sm');
  }

  &--xs {
    @extend .pm-c-button;
    @include button-size('xs');
  }

  &--fullwidth {
    @extend .pm-c-button;
    width: 100%;
  }

  &--no-hover {
    @extend .pm-c-button;
    pointer-events: none;
  }

  &--truncated {
    @extend .pm-c-button;
    display: inline-block !important;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  @include themes($button-normal-themes) {
    @each $color, $color-map in themed('background-colors') {
      &-normal--#{$color} {
        @extend .pm-c-button;
        @include button-normal-color(
          $color-map,
          map-get(themed('text-colors'), $color)
        );
      }
    }
  }

  @include themes($button-outline-themes) {
    @each $color, $color-map in themed('background-colors') {
      &-outline--#{$color} {
        @extend .pm-c-button;
        @include button-outline-color(
          map-get(themed('background-colors'), $color),
          map-get(themed('border-colors'), $color),
          map-get(themed('text-colors'), $color)
        );
      }
    }
  }

  @include themes($button-subtle-themes) {
    @each $color, $color-map in themed('background-colors') {
      &-subtle--#{$color} {
        @extend .pm-c-button;
        @include button-subtle-color(
          map-get(themed('background-colors'), $color),
          map-get(themed('text-colors'), $color)
        );
      }
    }
  }

  @include themes($button-ghost-themes) {
    @each $color, $color-map in themed('background-colors') {
      &-ghost--#{$color} {
        @extend .pm-c-button;
        @include button-ghost-color(
          map-get(themed('background-colors'), $color),
          map-get(themed('text-colors'), $color)
        );
      }
    }
  }
}

.pm-c-button-normal--noborder {
  @extend .pm-c-button;
  padding: 0rem;
  margin: 0rem;

  background-color: unset;
  border: none;
}

@each $color-variant, $color in $text-colors {
  .pm-c-button-text--#{$color-variant} {
    @extend .pm-c-button;
    @include text-color($color);

    padding: 0;
    background-color: transparent;
    outline: 0;
    border: none;
    transition: opacity 0.3s ease 0s;

    &:hover {
      opacity: 0.9;
    }
  }
}
