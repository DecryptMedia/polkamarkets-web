@mixin button-size($size) {
  @if $size == 'normal' {
    @extend .body, .semibold;
    padding: $button-padding-y $button-padding-x;
    gap: $button-gap;
  }

  @if $size == 'sm' {
    @extend .caption, .semibold;
    padding: $button-sm-padding-y $button-sm-padding-x;
    gap: $button-sm-gap;
  }

  @if $size == 'xs' {
    @extend .tiny, .semibold;
    padding: $button-xs-padding-y $button-xs-padding-x;
    gap: $button-xs-gap;
  }
}

@mixin button-normal-color($background-colors-map, $text-color) {
  color: $text-color;
  background-color: map-get($background-colors-map, 'background-color');
  border-color: map-get($background-colors-map, 'background-color');

  &:hover,
  :focus {
    background-color: map-get($background-colors-map, 'background-color-hover');
  }

  &:disabled {
    background-color: map-get(
      $background-colors-map,
      'background-color-disabled'
    );
    border-color: map-get($background-colors-map, 'background-color-disabled');
  }

  svg {
    fill: $text-color;
  }
}

@mixin button-dark-color(
  $color,
  $background,
  $background-hover: darken($background, 5%)
) {
  color: $gray-100;
  background-color: $background;
  border-width: 0.1rem;
  border-style: solid;
  border-color: $background;

  svg {
    fill: $gray-100;
  }

  &:hover,
  :focus {
    border-color: $background-hover;
    background-color: $background-hover;
  }

  &:disabled {
    opacity: 0.7;
  }
}

@mixin button-outline-color($color, $background) {
  color: $background;
  border-width: 0.1rem;
  border-style: solid;
  border-color: $background;

  svg {
    fill: $background;
  }

  @if $color == default {
    color: $gray-300;
    border-color: $gray-600;

    svg {
      fill: $gray-300;
    }
  }

  &:hover,
  :focus {
    @if $color != default {
      color: $neutral-white;

      svg {
        fill: $neutral-white;
      }
    }
    background-color: $background;
  }

  &:disabled {
    opacity: 0.7;
  }
}
